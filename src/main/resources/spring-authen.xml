<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
    					   http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="propertyPlaceholderConfigurer"
          class="com.wangyin.admin.frame.utils.CustomerPropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <!-- 加载数据库配置 -->
                <value>classpath*:runtimecfg/authen.properties</value>
                <value>classpath*:runtimecfg/important.properties</value>
                <value>classpath*:runtimecfg/dubbo.properties</value>
                <value>classpath*:runtimecfg/r2m.properties</value>
                <value>classpath*:runtimecfg/scheduler.properties</value>
                <value>classpath*:runtimecfg/gateway.properties</value>
                <value>classpath*:runtimecfg/jmq.properties</value>
                <value>classpath*:runtimecfg/fmq.properties</value>
                <value>classpath*:runtimecfg/jsf.properties</value>
                <value>classpath*:runtimecfg/ftp.properties</value>
                <value>classpath*:uncc.properties</value>
            </list>
        </property>
    </bean>
    <!-- 支持异步方法执行 -->
    <task:annotation-driven/>
    <!-- 注解配置 -->
    <context:component-scan base-package="com.jd.jr.boss.credit"/>
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!-- dubbo 配置  -->
    <import resource="spring-dubbo-common.xml"/>
    <import resource="spring-dubbo-server.xml"/>
    <!-- jmq 配置  -->
    <import resource="spring-jmq-consumer.xml"/>
    <import resource="spring-jmq-provider.xml"/>
    <import resource="spring-fmq-consumer.xml"/>
    <import resource="spring-fmq-provider.xml"/>
    <!-- 清结算和缴费中心配置  -->
    <import resource="gateway/spring-gateway-account.xml"/>
    <!-- 数据源事务配置 -->
    <import resource="spring-datasource.xml"/>
    <import resource="spring-mongodb.xml"/>
    <!-- 数据源事务配置 -->
    <import resource="spring-transaction.xml"/>
    <!-- r2m配置 -->
    <import resource="spring-r2m.xml"/>
    <!-- 定时任务配置 -->
    <import resource="spring-scheduler.xml"/>
    <!-- 台账系统配置  -->
    <import resource="gateway/spring-gateway-ledger.xml"/>
    <!-- 财务系统配置  -->
    <import resource="gateway/spring-gateway-finance.xml"/>
    <!-- 商户信息查询系统配置  -->
    <import resource="gateway/spring-gateway-merchantca.xml"/>
    <!-- jsf 调用  -->
    <import resource="jsf/spring-trade-consumer.xml"/>
    <import resource="jsf/spring-ras-consumer.xml"/>
    <import resource="jsf/spring-channel-consumer.xml"/>
    <import resource="jsf/spring-search-consumer.xml"/>
    <import resource="jsf/spring-jsf-provider.xml"/>
    <import resource="jsf/spring-cuservice-consumer.xml"/>
    <import resource="jsf/spring-caservice-consumer.xml"/>
    <!-- dubbo 调用  -->
    <import resource="spring-dubbo-consumer.xml"/>
    <!--spring线程池-->
    <bean id="threadPoolTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!--核心线程数 默认为1-->
        <property name="corePoolSize" value="1"/>
        <!--最大线程数，默认为10-->
        <property name="maxPoolSize" value="10"/>
        <!--队列最大长度-->
        <property name="queueCapacity" value="100"/>
        <!-- 线程池维护线程所允许的空闲时间，默认为60s --> 
        <property name="keepAliveSeconds" value="120"/>
        <!-- 线程池对拒绝任务（无线程可用）的处理策略，目前只支持AbortPolicy、CallerRunsPolicy；默认为后者 -->
        <property name="rejectedExecutionHandler">
            <!-- AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 -->
            <!-- CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 -->
            <!-- DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
            <!-- DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy"/>
        </property>
    </bean>
    
    <bean id="hspClient" class="com.wangyin.hsp.client.HSPClient">
    	<constructor-arg>
    		<bean class="com.wangyin.hsp.client.HSPConfig">
    			<property name="connectString" value="${hsp.connect.string}"/>
    			<property name="applicationID" value="${hsp.portal.appid}"/>
    			<property name="applicationPwd" value="${hsp.portal.apppwd}"/>
    			<property name="httpServerUrl" value="${hsp.httpserver.url}"/>
    		</bean>
    	</constructor-arg>
    </bean>
</beans>